{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-05-09T07:17:00.000Z","updated":"2018-05-09T07:17:00.623Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"webpack小技巧-公共组件引用路径简化","slug":"webpack小技巧-公共组件引用路径简化","date":"2018-06-15T06:02:10.000Z","updated":"2018-06-15T06:03:19.776Z","comments":true,"path":"2018/06/15/webpack小技巧-公共组件引用路径简化/","link":"","permalink":"http://yoursite.com/2018/06/15/webpack小技巧-公共组件引用路径简化/","excerpt":"","text":"日常开发中，我们会常常把一些功能提取出来，包装成一个公共模块或者组件，供不同地方使用，但是随着项目不断变大，项目目录不断变深，我们引用公共组件的路径越来越长！ 例如：引用一个公共模块1import Menu from '../../../../../components/Menu'; // 这里路径太深，很容易写错 我们该怎么优化尼？ 解决方案1：使用webpack的resolve.alias属性先配置webpack123456789module.exports = &#123; ... resolve: &#123; alias: &#123; \"@commModule\": path.resolve(__dirname, \"src/components/\") &#125; &#125; ...&#125;; 引用Menu模块1import Menu from '@commModule/Menu'; 解决方案2：babel-plugin-module-resolver配置.babelrc123456789&#123; \"plugins\": [ [\"module-resolver\", &#123; \"alias\": &#123; \"@commMdule\": \"./src/components\" &#125; &#125;] ]&#125; 引用Menu模块1import Menu from '@commModule/Menu'; 总结或许这只是一个小优化，但是在实际场景中，能够大大的降低我们的维护成本，提高我们的生产效率！","categories":[{"name":"webpack","slug":"webpack","permalink":"http://yoursite.com/categories/webpack/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"http://yoursite.com/tags/webpack/"}]}]}